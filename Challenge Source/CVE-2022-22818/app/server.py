from django.conf import settings
from django.urls import path
from django.http import HttpResponse
from django.template import loader
from django.core.management import execute_from_command_line

import bot
import logging
from secret import SECRET_KEY

logging.basicConfig(level=logging.INFO, format="%(asctime)s - %(message)s")

settings.configure(
    DEBUG=True,
    SECRET_KEY=SECRET_KEY,
    ROOT_URLCONF=__name__,
    ALLOWED_HOSTS=["localhost"],
    INSTALLED_APPS=[
        "django.contrib.contenttypes",
        "django_extensions",
    ],
    TEMPLATES=[
        {
            "BACKEND": "django.template.backends.django.DjangoTemplates",
            "DIRS": ["templates"],
            "APP_DIRS": True,
            "OPTIONS": {
                "context_processors": [
                    "django.template.context_processors.debug",
                    "django.template.context_processors.request",
                ],
            },
        },
    ],
    STATIC_URL="/static/",
    SECURE_SSL_REDIRECT=True,
)

def home(request):
    if request.method == "POST":
        name = request.body.decode()
        logging.info(f"Name received in home POST: {name}")
        bot.check(name)
        return HttpResponse("Thanks")

    name = request.GET.get("name", "NO NAME FOUND")
    logging.info(f"Name received in home GET: {name}")
    template = loader.get_template("home.html")
    context = {
        "name": name,
    }
    return HttpResponse(template.render(context, request))

urlpatterns = [
    path("", home, name="home"),
]

if __name__ == "__main__":
    execute_from_command_line([
        "manage.py",
        "runserver_plus",
        "0.0.0.0:8000",
        "--cert-file=/certs/fullchain.pem",
        "--key-file=/certs/privkey.pem",
    ])
